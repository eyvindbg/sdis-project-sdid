package sdid.cli;

import static javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY;

import java.util.Map;

import javax.xml.registry.JAXRException;
import javax.xml.ws.BindingProvider;

import pt.ulisboa.tecnico.sdis.id.ws.EmailAlreadyExists_Exception;
import pt.ulisboa.tecnico.sdis.id.ws.InvalidEmail_Exception;
import pt.ulisboa.tecnico.sdis.id.ws.InvalidUser_Exception;
import pt.ulisboa.tecnico.sdis.id.ws.SDId;
import pt.ulisboa.tecnico.sdis.id.ws.SDId_Service; // classes generated by wsimport from WSDL
import pt.ulisboa.tecnico.sdis.id.ws.UserAlreadyExists_Exception;
import sdid.cli.uddi.UDDINaming;


public class SDIDClient {

    public static void main(String[] args) throws JAXRException {
    	 // Check arguments
        if (args.length < 2) {
            System.err.println("Argument(s) missing!");
            System.err.printf("Usage: java %s uddiURL name%n", SDIDClient.class.getName());
            return;
        }
        String uddiURL = args[0];
        String name = args[1];

        System.out.printf("Contacting UDDI at %s%n", uddiURL);
        UDDINaming uddiNaming = new UDDINaming(uddiURL);

        System.out.printf("Looking for '%s'%n", name);
        String endpointAddress = uddiNaming.lookup(name);

        if (endpointAddress == null) {
            System.out.println("Not found!");
            return;
        } else {
            System.out.printf("Found %s%n", endpointAddress);
        }

        SDId_Service service = new SDId_Service();
        SDId port = service.getSDIdImplPort();

        System.out.println("Setting endpoint address ...");
        BindingProvider bindingProvider = (BindingProvider) port;
        Map<String, Object> requestContext = bindingProvider.getRequestContext();
        requestContext.put(ENDPOINT_ADDRESS_PROPERTY, endpointAddress);
        System.out.printf("Remote call to %s ...%n", endpointAddress);
        try {
			port.createUser("Ola1234", "ola@gmail.com");
		} catch (EmailAlreadyExists_Exception e) {
			System.out.println("Email already exists");
		} catch (InvalidEmail_Exception e) {
			System.out.println("Invalid email");
		} catch (InvalidUser_Exception e) {
			System.out.println("Invalid username");
		} catch (UserAlreadyExists_Exception e) {
			System.out.println("User already exists");
		}
    }

}
